@page "/register"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Register</h3>

<EditForm Model="registerModel" OnValidSubmit="HandleInsecureRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="registerModel.Username" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="registerModel.Password" type="password" />
    </div>
    <button type="submit" class="btn btn-danger">Insecure Register</button>
</EditForm>

<EditForm Model="registerModel" OnValidSubmit="HandleSecureRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="registerModel.Username" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="registerModel.Password" type="password" />
    </div>
    <button type="submit" class="btn btn-primary">Secure Register</button>
</EditForm>

<p>@message</p>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string message;

    private async Task HandleInsecureRegister()
    {
        var response = await Http.PostAsJsonAsync("api/auth/insecure-register", registerModel);
        if (response.IsSuccessStatusCode)
        {
            message = "Insecure registration successful!";
            Navigation.NavigateTo("/login");
        }
        else
        {
            message = "Insecure registration failed.";
        }
    }

    private async Task HandleSecureRegister()
    {
        var response = await Http.PostAsJsonAsync("api/auth/secure-register", registerModel);
        if (response.IsSuccessStatusCode)
        {
            message = "Secure registration successful!";
            Navigation.NavigateTo("/login");
        }
        else
        {
            message = await response.Content.ReadAsStringAsync(); // Display detailed error message
        }
    }

    public class RegisterModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}
